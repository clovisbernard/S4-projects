pipeline {
    agent any

    stages {
        stage('SonarQube analysis') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
            }
            environment {
                CI = 'true'
                //  scannerHome = tool 'Sonar'
                scannerHome = '/opt/sonar-scanner'
            }
            steps {
                script {
                    def sonarProjectKey = 'your-project-key' // Set your project key here
                    withSonarQubeEnv('Sonar') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=${sonarProjectKey}"
                    }
                }
            }
        }

        stage('Build auth') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker build -t devopseasylearning/s4-pipeline-auth:$(BUILD_NUMBER)
                cd -
                '''
            }
        }


        stage('push auth') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker push -t devopseasylearning/s4-clovis-auth:$(BUILD_NUMBER)
                cd -
                '''
            }
        }

        stage('Build db') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker build -t devopseasylearning/s4-pipeline-db:$(BUILD_NUMBER)
                cd -
                '''
            }
        }

        stage('push db') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker push -t devopseasylearning/s4-clovis-db:$(BUILD_NUMBER)
                cd -
                '''
            }
        }


        stage('Build ui') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker build -t devopseasylearning/s4-pipeline-ui:$(BUILD_NUMBER)
                cd -
                '''
            }
        }


        stage('push ui') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker push -t devopseasylearning/s4-clovis-ui:$(BUILD_NUMBER)
                cd -
                '''
            }
        }

        stage('Build weather') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker build -t devopseasylearning/s4-pipeline-weather:$(BUILD_NUMBER)
                cd -
                '''
            }
        }


        stage('push weather') {
            steps {
                // log in to Docker hub
                sh '''
                cd auth
                docker push -t devopseasylearning/s4-clovis-weather:$(BUILD_NUMBER)
                cd -
                '''
            }
        }
    }
}
